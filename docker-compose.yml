services:
  mysqldb:
    container_name: mysqldb
    platform: linux/amd64
    image: mysql:5.7
    # restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_USER=$MYSQL_USER
      - MYSQL_PASSWORD=$MYSQL_PASSWORD
      - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQL_DATABASE
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 60s
      retries: 30
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    expose:
      - 8081
    volumes:
      - /var/lib/mysql
      - ./mysql/migrations:/docker-entrypoint-initdb.d
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    restart: unless-stopped

  back_app:
    container_name: back_app
    depends_on:
      mysqldb:
        condition: service_healthy
    links:
      - mysqldb
    build: ./back-node
    # restart: unless-stopped
    env_file: ./.env
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    working_dir: /back-node
    environment:
      - DB_HOST=$MYSQL_HOST
      - DB_USER=$MYSQL_USER
      - DB_PASSWORD=$MYSQL_PASSWORD
      - DB_NAME=$MYSQL_DATABASE
      - DB_PORT=$MYSQLDB_DOCKER_PORT
    #volumes:
    #  - .:/back-node
    command: sh -c "npm start"
      #- .:/app
    #command: sh -c "npm install && npm run start"

  front_app:
    container_name: front_app
    build:
      context: ./front-react
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_URL_API=http://localhost:8081
    working_dir: /front-react
    depends_on:
      - back_app
    volumes:
      - ./front-react:/front-react
    command: sh -c "npm start"
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 8080:8080
    depends_on:
      - front_app
